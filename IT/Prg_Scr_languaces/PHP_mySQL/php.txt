To change the XAMPP server port number:

   1. Stop the XAMPP server, if it is running already.
   2. Open the file [XAMPP Installation Folder]/apache/conf/httpd.conf.
   3. Now search for the string Listen 80 (I’m assuming that your XAMPP was using the port 80. Otherwise, just search for the string “Listen”). This is the port number which XAMPP uses. Change this 80 to any other number which you prefer.
   4. Then search for the string “ServerName” and update the port number there also.
   5. Now save and re-start XAMPP server and you are done.


<?php

FirePHP

require_once($_SERVER['DOCUMENT_ROOT']."/FirePHPCore-0.3.2/lib/FirePHPCore/FirePHP.class.php");
require_once($_SERVER['DOCUMENT_ROOT'].'/FirePHPCore-0.3.2/lib/FirePHPCore/fb.php');
FB::setEnabled(true);//asta ca sa dezactivezi debugging cand lansezi situl
$fp = FirePHP::getInstance(true); //non-global

$fp->log($var,"Var__"); || $fp->log("log message");
$fp->warn('This is a warning message', 'My Warning Label'); || $fp->warn($var, 'My Warning Label');
$fp->error($var,"Label : "); || $fp->error("Message","Label");
$fp->info($var,"This is a info message"); || $fp->info("Mesaj","Label");

check ip pt a activa FirePHP debugging
{
	// Add allowed ip addresses below, comma-separated
	$allowedIpArr = array('127.0.0.1', 'XX.XX.XX.XX');
 
	if (in_array($_SERVER['REMOTE_ADDR'], $allowedIpArr)) {
		$firephp->setEnabled(true);
	}
	else {
		$firephp->setEnabled(false);
	}
}
exemplu de log => Fb::log($array_nume, "Acesta este array_nume"); sau simplu fb();

$fp primeste instanta
$fp = FirePHP::getInstance(true); //non-global

$fp->log($var , 'Plain Message');
$fp->warn($var , 'Warn Message');
$fp->error($var , 'Error Message');

$fp->info($var,"This is a info message for \$var");

$fp->trace($var,"Trace \$var before change"); 


htmlentities($input_str, ENT_QUOTES, "UTF-8");//pg411

//htmlspecialchars($row['title'])
     '&' (ampersand) becomes '&amp;'
     '"' (double quote) becomes '&quot;' when ENT_NOQUOTES is not set.
     ''' (single quote) becomes '&#039;' only when ENT_QUOTES is set.
     '<' (less than) becomes '&lt;'
     '>' (greater than) becomes '&gt;'


//arata toate metodele si atributele unei clase
require_once("page.inc");
$class = new ReflectionClass("Page");
echo "<pre>".$class."</pre>";

//parcurg fiecare atribut al clasei dog
$d1=new dog();
$d1->color="red";
$d1->height="68cm";
$d1->weight="50kg";

foreach($d1 as $atributte)
{
    echo($atributte);
}

//type hinting , trbuie sa transmit un obiect din clasa B sau mostenitor
function check_hint(B $someclass)

//
($b instanceof B)//return true

//constantele merg fara instantierea clasei
//const si la atribute si la metode
//la const nu folosi this s-ar putea sa nu instantiezi si atunci this arata catre nimeni
class Math {
const pi = 3.14159;
}
echo " Math::pi = ".Math::pi."\n";

//asa aflu daca un url arata spre pagina currenta
if( strpos($_SERVER['PHP_SELF'],$url)==false ){return false;}else{return true;}
//cu abstract provides signature but no implementation
//trebuie sa le implementezi cand mostenesti similar cu interface
abstract operationX($param1, $param2);

abstract class A
{
abstract function operationX($param1, $param2);
}

//interfaces
interface Displayable{
function display();
}

class webPage implements Displayable{

function display()
{ ... }

}

cu final nu se mai mosteneste o metoda sau o clasa intreaga

function __set($name,$value) si __get($name)

func_num_args()
func_get_args()
func_get_arg(int value)//

function parcurgereArray($array){
    reset($array);//pune pointeru la inceput
    $value=current($array);
    
    while($value){
        echo($value);
        $value=next($array);
    }
}

//cu readfile incluzi un fisier la fel ca include si require da nu se executa script de pe el
readfile()

//split returneaza un array
$address="username@yahoo.com";
$arr=split("\.|@",$address);
while(list( $key , $value ) = each($arr) )
{
	echo("$value");
}//imparte in username,@,yahoo, . , com

//regular expresions
//eregi nu e case sensitive
$var="bandare.com";

if( ereg('edu|com',$var,$x) ){//ereg tre sa aiba expresia intre ' , important
    echo($var." ".$x[0]);
}

str_replace
$text="Fuck you motherfucker fuck off pussy";
$offcolor=array("motherfucker","Fuck","fuck","pussy");
$replace=array("mo**********r","F**k","f**k","p***y");

$feedback=str_replace($offcolor,$replace,$text);
//--
la strpos foloseste result===false pentru ca daca result e fals
echivaleaza cu 0 si zero poti incurca cu prima pozitie din string
poate fi poz 0 si cu == sa zici ca nu a gasit nimic

//pune backslash la caractere cum ar fi " , pt a nu fi conflict cu baza de date
$text=addslashes(trim($_POST["text"]));
stripslashes()// le inlatura

//la fiecare element se executa fc myPrint , pg 141 myPrint( value , key ,userdata)
array_walk($array,"myPrint");

//creaza un array cu fiecare linie
$orders=file("$DOCUMENT_ROOT/../../orders/orders.txt");

//explode creeaza un array
$line = explode("\t",$orders[$i]);//al treilea parametru limiteaza nr de elemente returnate
$line = implode("\t",$orders[$i]);//reface explodu la cum a fost

//reordoneaza aleator un array
shuffle($products);

//numere impare
$odds=range(1,10,2);
//toate literele
$letters=range("a","z");

//sterg un fisier
unlink("$DOCUMENT_ROOT/../../orders/orders.txt");

//citeste tot fisieru si pune br la new line
echo nl2br(fread($fp,filesize("$DOCUMENT_ROOT/../../orders/orders.txt")));

//breaks up lines of files when u have a delimiter
$order1=fgetcsv($fp,100,"\t");
echo($order1[0].$order1[1].$order1[2]);

//constanta
define("SPARKPRICE",4);

break
continue
exit

//accesez variabila dupa nume creat de mine
for($i=1;$i <= $numNames;i++)
{
	$temp="name$i";//am variabile care se numesc name1,name2 etc.
	echo($$temp."<br />");//asa le accesez
}

//number_format
number_format($totalamount,2)

//instanceof
if($myObject instanceof sampleClass)

//accesez global variable x intr-o functie asa
function()
{
	global x;sau
	$GLOBALS["x"];
}

//xml
$xmlDoc = simplexml_load_file("cd_catalog.xml");

$x=$xmlDoc->xpath("//cd/artist");

foreach($x as $y)
{
    echo($y);
}

sau

$x=$xmlDoc->xpath("//cd");

foreach($x as $y)
{
    echo($y->artist);
}

//array
$shop=array
    (
        array("Buya","Legendary Sorceress",500),
        array("Joe","Normal Kid",10)
    );
//array nume
	$ages = array("Peter"=>32, "Quagmire"=>30, "Joe"=>34); 

//multidimensional with names

$families = array
  (
  "Griffin"=>array
  (
  "Peter",
  "Lois",
  "Megan"
  ),
  "Quagmire"=>array
  (
  "Glenn"
  ),
  "Brown"=>array
  (
  "Cleveland",
  "Loretta",
  "Junior"
  )
  ); 	

//foreach
foreach($products as $key => $value ){
    echo($key." ".$value."<br />");
}  
  
//foreach
	$x=array("one","two","three");
	foreach ($x as $value)
	{	
		echo $value . "<br />";
	}	  
  
//r+
$file=fopen("Text1.txt","r+");
/*
r  	Read only. Starts at the beginning of the file
r+ 	Read/Write. Starts at the beginning of the file
w 	Write only. Opens and clears the contents of file; or creates a new file if it doesn't exist
w+ 	Read/Write. Opens and clears the contents of file; or creates a new file if it doesn't exist
a 	Append. Opens and writes to the end of the file or creates a new file if it doesn't exist
a+ 	Read/Append. Preserves file content by writing to the end of the file
x 	Write only. Creates a new file. Returns FALSE and an error if file already exists
x+ 	Read/Write. Creates a new file. Returns FALSE and an error if file already exists
*/

  
//feof
while(!feof($file)) 

//convert to int
      $str = "10";
      $num = (int)$str;
  
      
 
//ia un sir
	fgets($file);
  
//include || require
	include("header.php")
	
//file exists
	file_exists("upload/menu.txt");
	
//get contents
echo file_get_contents("test.txt");

//form enctype upload file
<form action="upload_file.php" method="post" enctype="multipart/form-data">
<input type="file" name="file" id="file" />

//upload file
	move_uploaded_file($_FILES["file"]["tmp_name"],"upload/" . $_FILES["file"]["name"]);
	move_uploaded_file($_FILES["file"]["tmp_name"],"upload/buya.txt"); 
	
//date h i s
echo date("d-m-y|-|H:i:s"); 
	
//session 
session_start();

if ($_SESSION[‘login’] != “go” ) 
{
	header(“Location: loginPage.php”);//this is slow
	exit(); 
}
//this is better
if (!logged_in())
{
	require 'login.php';
	exit;
}

//ex
session_start();

    if(isset($_SESSION['views']))
        $_SESSION['views']+=1;
    else
        $_SESSION['views']=1;
        
echo($_SESSION['views']);   

//elibereaza variabila
	unset($_SESSION['views']);

//session_destroy() will reset your session and you 
//will lose all your stored session data.
session_destroy();	

//cookie ca si session trebuie la inceput inaintea 
//oricarui output
	setcookie("id","Raz",time()+60);//60 sec
	
//die opreste scriptu
	if(!file_exists("welcome.txt"))
	{
		die("File not found");
	}
	else
	{
		$file=fopen("welcome.txt","r");
	}

//set_error_handler
function myHandler($errNum,$errStr)
{
    echo("<b>ERROR:</b> [$errNum] $errStr");
}

set_error_handler("myHandler");
//sau	
set_error_handler("myHandler",8); //8 tipul de eroare

//trigger_error
	trigger_error("x is false",E_USER_WARNING);
	
//error_log 3 zici ca pui erroru in fisier
	error_log("x is false ! \r\n",3,"error.txt")==true)	

//simple try throw catch	
class myErrorClass extends Exception
{
    public function show()
    {
        echo($this->getMessage()." Buya" );
    }
}

function num($x)
{
    if($x>1)
        throw new myErrorClass("My message");
}

try
{
    num(2);
}

catch(myErrorClass $e)
{
    $e->show();
}

//exception handler for uncought exeptions

function myException($exception)
{
	echo "<b>Exception:</b> " , $exception->getMessage();
}

set_exception_handler('myException');

throw new Exception('Uncaught Exception occurred');

//double try catch

try
  {
  try
    {
    //check for "example" in mail address
    if(strpos($email, "example") !== FALSE)
      {
      //throw exception if email is not valid
      throw new Exception($email);
      }
    }
  catch(Exception $e)
    {
    //re-throw exception
    throw new customException($email);
    }
  }

catch (customException $e)
  {
  //display custom message
  echo $e->errorMessage();
  }

//filter
filter_var($int, FILTER_VALIDATE_INT);
filter_has_var(INPUT_GET, "email");
filter_input(INPUT_GET, "email", FILTER_VALIDATE_EMAIL);
filter_input(INPUT_POST,"url",FILTER_SANITIZE_URL)

//filter ex
$filters=array
(
    "name" => array
    (
        "filter"=>FILTER_SANITIZE_STRING
    ),
    
    "age" => array
    (
        "filter" => FILTER_VALIDATE_INT,
        "options" => array
        (
            "min_range" =>1,
            "max_range" =>120
        )   
    ),
    
    "email" => array
    (
        "filter" => FILTER_VALIDATE_EMAIL
    )
);

$result=filter_input_array(INPUT_POST,$filters);

if($result['age']==false)
{
    echo("Age is not betwen 1 and 120 or is not a int <br />");
}
else
{
    echo("Age good <br />");    
}

if($result['email']==true)
{
    echo("email good <br />");
}
else
{
    echo("email not valid <br />");
}

//FILTER_CALLBACK
function _toWhite($x)
{
    return str_replace("_"," ",$x);
}

$func=array
(
    "options" =>"_toWhite"    
);

$str="Peter_Parker_is_a_great_guy_!";

echo filter_var($str,FILTER_CALLBACK,$func);

//mysql connect
	$con = mysql_connect("localhost","peter","abc123");
	mysql_close($con);
	
	mysql_error();//arata eroarea

	mysql_query("CREATE DATABASE my_db",$myConnection);

//mysql_fetch_array
$response=mysql_query($sql2,$myConnection);

	while($row=mysql_fetch_array($response) )
	{
		echo("First name :".$row['First_Name']."Last Name: ".$row['Last_Name']);
	}
//insert	
$sql="INSERT INTO Persons (FirstName, LastName, Age)
VALUES
('$_POST[firstname]','$_POST[lastname]','$_POST[age]')";

//index array
$t=key($oamenii_la_masa);

//inregistrarea din indx curent
$v=current($oamenii_la_masa);	

//lungimea inreg
count($oamenii_la_masa);

$tablou_caractere = range(‘a’,’z’);
//se creaza un tablou care are ca elemente literele alfabetului 

 $tablou_numeric = range(‘10’,’100’); 
//un tablou creat din elemente numerice cu valori de la 10 la100. 

$tablou_numeric2 = range(10,100,10); 
// un tablou creat din elemente numerice cu valori de la 10 la100 din 10 în 10. 

// stergerea unui tablou
unset($oamenii_la_masa);

// se sterge elementul Viorel
unset($oamenii_la_masa[2]); 

//sortare
sort($oamenii_la_masa);

//concatenare
print_r(array_merge($fructe,$fructe1,$fructe2)

/*
each()-returneaza elementul curent dintr-un tablou, indexul 
si valoarea acestuia, în cazul în care s-a ajuns la sfârsitul 
tabloului se returneaza FALSE. În general se foloseste pentru a 
afisa elementele unui tablou folosind 
ciclul WHILE. Sintaxa functie este :
*/

$fructe=array("mere","pere","cirese");
while($element_returnat=each($fructe))
{
	echo $element_returnat['key'].' ->'.$element_returnat['value'];
	echo '<br\>';
}

//list
$fructe=array("mere","pere","cirese");
while(list($index,$valoare)=each($fructe))
{
	echo $index.' ->'.$valoare;
	echo '<br\>' ;
}

7. reset() ;-are rolul de a pozitionea pointerul pe primul element al 
unui tablou si returneaza primul element al acestuia. Sintaxa functiei este:
mixed reset(array tablou);

8. next();-avanseaza pointerul spre urmatorul element din cadrul tabloului
 curent si returneaza valoarea acestuia, în cazul în care s-a ajuns la 
 sfârsitul tabloului se returneaza FALSE. Sintaxa functiei este:
mixed next(array tablou);

9. prev();-pozitioneaza pointerul spre precedentul element din cadrul tabloului 
curent si returneaza valoarea acestuia, în cazul în care s-a ajuns la începutul
 tabloului se returneaza FALSE. Sintaxa functiei este:
mixed prev(array tablou);

10. array_reverse(); returneaza un tablou care contine elementele 
tabloului primit ca parametru în ordine inversa. Sintaxa functiei este:
array reverse(array tablou);

11. array_sum();-calculeaza si returneaza suma elementelor ca un 
întreg sau float. Sintaxa functiei este:
mixed array_sum (array tablou);	
	
see javascript protected and other

?>	